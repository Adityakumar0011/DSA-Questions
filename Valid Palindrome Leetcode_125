class Solution {
    private:
    bool valid(char ch){        // check for valid ccharacters
        if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z') || (ch>='0' && ch<='9')){
            return 1;
        }
        return 0;
    }
    char toLower(char ch){       // change upper to lower case .
        if((ch>='a' && ch<='z') || (ch>='0' && ch<='9')){
            return ch;
        }
        else{
            char temp = ch-'A' + 'a';      
            return temp;
        }
    }

    bool checkPalindrome(string a){     // check palindrome or not
    int s=0;
    int e=a.length()-1;
    while(s<=e){
        if(toLower(a[s]) != toLower(a[e])){   
            return 0;
        }
        else{
            s++;
            e--;
        }
    }
    return 1;
}

public:
    bool isPalindrome(string s) {
        string temp="";     // create an empty string

        // store valid characters to new made string
        for(int j=0;j<s.length();j++){
            if(valid(s[j])){
                temp.push_back(s[j]);
            }
        }
        // convert into lowercase
        for(int i=0;i<temp.length();i++){
            temp[i]=toLower(temp[i]);
        }

    return checkPalindrome(temp); 
    }
};
